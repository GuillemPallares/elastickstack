metricbeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: false
  name: "ElasticStack"
  tags: ["service-X", "web-tier"]

processors:
  - add_host_metadata: ~
  - add_cloud_metadata: ~
  - add_docker_metadata: ~

setup.dashboards.enabled: true

setup.kibana.host: "http://kibana:5601"

output.elasticsearch:
  hosts: '${ELASTICSEARCH_HOSTS:elasticsearch:9200}'
  # username: '${ELASTICSEARCH_USERNAME:}'
  # password: '${ELASTICSEARCH_PASSWORD:}'

# enabled modules for monitoring (e.g. elasticsearch-xpack)
metricbeat.modules:
- module: system
  metricsets: ["cpu", "load", "memory", "network", "process", "process_summary", "core", "diskio", "socket"]
  processes: ['.*']
  process.include_top_n:
    by_cpu: 5
    by_memory: 5
  period: 10s
  cpu.metrics:  ["percentages"]
  core.metrics: ["percentages"]

- module: system
  period: 1m
  metricsets:
    - filesystem
    - fsstat
  processors:
  - drop_event.when.regexp:
      system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'

- module: system
  period: 15m
  metricsets:
    - uptime

- module: elasticsearch
  metricsets:
    - node
    - node_stats
    #- index
    #- index_recovery
    #- index_summary
    #- shard
    #- ml_job
  period: 10s
  hosts: ["http://elasticsearch:9200"]
  xpack.enabled: true
  #username: "elastic"
  #password: "changeme"
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  #index_recovery.active_only: true
  #scope: node
  
- module: logstash
  metricsets:
    - node
    - node_stats
  period: 10s
  hosts: ["http://logstash:5000","http://logstash:5044"]
  #username: "user"
  #password: "secret"
  xpack.enabled: true


- module: kibana
  metricsets:
    - stats
  period: 10s
  hosts: ["http://kibana:5601"]
  #basepath: ""
  #username: "user"
  #password: "secret"
  xpack.enabled: true

  
- module: docker
  metricsets:
    - "container"
    - "cpu"
    - "diskio"
    - "event"
    - "healthcheck"
    - "info"
    - "image"
    - "memory"
    - "network"
  hosts: ["unix:///var/run/docker.sock"]
  period: 10s
  enabled: true

  # If set to true, replace dots in labels with `_`.
  #labels.dedot: false

  # If set to true, collects metrics per core.
  #cpu.cores: true

  # To connect to Docker over TLS you must specify a client and CA certificate.
  #ssl:
    #certificate_authority: "/etc/pki/root/ca.pem"
    #certificate:           "/etc/pki/client/cert.pem"
    #key:                   "/etc/pki/client/cert.key"